ITとは？
IT・・・情報技術のことで、コンピューターやデータ通信に関する技術の総称。

OS
OS・・・オペレーションシステムのことで、アプリやデバイスを動かすためのソフトウェアのこと。
Windows・・・マイクロソフト社が開発したOS。
macOS・・・Apple社が開発・販売するmacのオペレーションシステム。
UNIX・・・コンピューター用のマルチタスク・マルチユーザーのOSの一種。
Linux・・・オープンソースのOS。プログラムが公開されており誰でも自由に入手・使用できる。

言語・環境
HTML・・・ウェブページを作成するために開発された言語。各要素の意味や情報構造を定義する。
CSS・・・ウェブページのスタイルを指定するための言語。どのように装飾するかを指定する。
MySQL・・・世界中の多くの企業が使用しているデータベース管理システム。
PHP・・・動的にWebページを生成することが出来るサーバーサイドのスクリプト言語。
JavaScript・・・動的なWebページを作成する事ができるプログラミング言語。ブラウザー上で表示される地図やアニメーションなども表示できる。
jQuery・・・ウェブブラウザ用のJavaScriptコードをより簡単に記述できるようにする為に設計されたJavaScriptライブラリ。
Apache・・・世界中で使用されているWebサーバーソフトウェア。最も利用されている。
Bootstrap・・・HTML/CSS/JavaScriptから構成される最も有名なWEBフレームワーク。特徴は知識がなくても使え、デザイン性の確保ができ、レスポンシブWEBデザインができる。

エンジニアなど
SE・・・顧客の要求から仕事を決定し、大まかな設計をするまでの情報システム開発における上流工程を担当する職種。
PG・・・コンピューターシステムのプログラムを作る職種。SEが作成した設計書に基づいて実装する。
Webデザイナー・・・ウェブに関係するデザイナーである。

ユーザーインターフェース
CUI・・・キーボードに入力されるコマンドによって、OS上の操作を行う。コンピューターユーザーに対しての情報が、文字で表示される。
GUI・・・コンピューターへ出す命令や指示等を、ユーザーが画面上で視覚的に捉えて行動を指定できるもの。

ファイルとディレクトリ
ファイル・・・パソコンでデータを扱う時の基本単位となる、データのまとまりのこと。
ディレクトリ・・・ファイルをグループ化するための特殊なファイルで、整理・管理などの目的で活用される。
ルート・ディレクトリ・・・コンピューターファイルシステムにおいて、ファイル階層における最初または最上位のディレクトリである。
カレント・ディレクトリ・・・ユーザーが現時点で作業を行っているディレクトリ。
パス・・・コンピューター内で特定の資源の所在を表す文字列のこと。
絶対パス・・・階層構造の頂点から位置関係を記述する方式。
相対パス・・・基準となるファイルから目的のファイルやフォルダまでの位置を記述する方式。

各種プロトコル
HTTP・・・WebサーバとWebクライアントの間でデータの送受信を行うために用いられるプロトコル。
FTP・・・コンピューターネットワーク上のクライアントとサーバの間でファイル転送を行うための通信プロトコル。
HTTPS・・・HTTPをより安全に行うためのプロトコル及びURIスキーム。
SSL・・・インターネット上でやりとりされる情報を暗号化する仕組み。暗号化することで盗聴や改ざんの危険を防ぐ。
SSH・・・暗号や認証の技術を利用して、安全にリモートコンピュータと通信するためのプロトコル。認証部分を含む全てのネットワーク上の通信が暗号化される。
ポート・ポート番号・・・同じコンピュータ内で動作する複数のソフトウェアのどれが通信するかを指定するための番号。
HTTP、FTP、SSHの各ポート番号・・・HTTPがTCP/80,FTPがTCP20(データ),TCP21(制御),SSHがTCP22。
ファイアウォール・・・信頼できない外部ネットワークの攻撃から内部ネットワークを保護するシステム。
TCP・・・ネットワークで、IPの一段階上位層のプロトコルとして標準的に使われるもの。

IPアドレス
IPアドレス・・・IPにおいてパケットを送受信する機器を判別するための番号。
グローバルIPアドレス・・・インターネットに接続する機器が使用できるIPアドレス。
プライベートIPアドレス・・・組織内のネットワークでのみ使用できるIPアドレス。

ドメイン
ドメイン・・・IPネットワークにおいて、個々のコンピュータを識別し、接続先を指定されるために使用される名称の一部。
DNS・・・ドメインとIPアドレスを対応付けて管理するシステム。ドメインを管理・運用するうえで欠かせない役割。
VPN・・・離れた場所の間を仮想的な専用線で繋いで安全なデータ通信を実現する仕組み。
ブリッジ・・・ネットワークにおいてケーブルに流れるデータを中継する機能を持った装置。
プロキシサーバー・・・インターネットに直接接続できないコンピューターに代わり、インターネットに接続し、Webサイトへのアクセスなどを行うサーバー。

電子メール
SMTP・・・メールを送信するための通信プロトコル。
POP・・・メールを受信するための通信プロトコル。
IMAP・・・メールを受信するための通信プロトコル。POPと違いサーバーに残る。

セッションとクッキー
セッション・・・コンピュータシステムやネットワーク通信において、一連の操作や通信のこと。
クッキー・・・Webサイトの提供者が、Webブラウザを通じて訪問者のコンピュータに一時的にデータを書き込んで保存させる仕組み。
キャッシュ・・・データを一時的に保存することで、データの処理速度を速める考え方、仕組み。

DBについて
チューニング・・・システムやプログラムを改良し、パフォーマンスの向上を図ること。
スロークエリ・・・データベースにおいて、時間のかかっているSQLのこと。
インデックス・・・DBで、検索や並べ替えを効率的に行うために使われる機能。

テストについて
フロー・・・コンピュータプログラムを構成する命令や手続き、処理の流れのこと。
単体テスト・・・ソフトウェアやシステムのテスト手法の一つで、単一の部品を対象に行うテスト。
結合テスト・・・ソフトウェアやシステムのテスト手法の一つで、複数の部品を組み合わせて行うテスト。

チケット管理ツール
チケット管理ツール・・・プロジェクト毎に発生各種タスクを発行して、制作者に対して仕事を依頼するためのもの。
タスク・・・コンピュータ内でOSが処理する仕事の単位のこと。

バージョン管理
Git・・・ファイルの変更履歴を管理するバージョン管理システムのひとつ。
SourceTree・・・プログラムのソースコードを管理するGitを簡単に扱うためのツール。
SVN・・・プログラムのソースコードを管理する集中型バージョン管理システムの一つ。
コンフリクト・・・複数の装置やプログラムなどが同じ資源を同時に利用しようとして競合状態になってしまうこと。
デグレ・・・システム開発におけるプログラム修正やインフラ設定の変更等により、正常に動作していた機能が動かなくなるという、品質低下のトラブルのこと。
マージツール・・・高度な2者、3者間のファイル比較、マージ、およびフォルダ同期を行うツール。

その他
ロジック・・・プログラムを処理するための内容や手順のこと。
デバッグ・・・テストなどによって発見された誤作動・不具合について、その原因やプログラム上での位置を探索・特定し、意図した通り動作するように修正する作業のこと。

開発手法
ウォーターフォール開発・・・開発作業を複数の工程に分け、各工程の成果をドキュメントにまとめ、ソフトウェア開発の品質を確保する手法。
アジャイル開発・・・ソフトウェアを迅速に、状況の変化に柔軟に対応できるように開発する手法。
アルゴリズム・・・ある特定の問題を解く手順を、計算や操作の組み合わせとして明確に定義したもの。
フローチャート図・・・工程や手順の流れを図示する手法の一つで、個々の段階を箱で表し、それらを順序や論理の推移に従って矢印や線で結んだもの。

設計書
外部設計・・・ソフトウェアや情報システムの開発工程の一つで、外部から見たシステムの仕様を定義数る工程。
内部設計・・・ソフトウェアや情報システムの開発工程の一つで、全体の構成や行うべき処理の詳細など実装に必要な仕様を定義する工程。
要件定義・・・システムやソフトウェアの開発において、実装すべき機能や満たすべき性能を明確にしていく作業。
要件仕様書・・・エンドユーザーが開発担当側に対して開発を依頼するシステム要件を文章化したもの。

システム開発におけるテスト
単体テスト・・・ソフトウェアやシステムのテスト手法の一つで、単一の部品を対象に行うテスト。
結合テスト・・・ソフトウェアやシステムのテスト手法の一つで、複数の部品を組み合わせて行うテスト。
総合テスト・・・ソフトウェアやシステムのテスト手法の一つで、構築したシステムが全体として予定通りの機能を満たしているか確認するテスト。
テスト仕様書・項目・・・システムやソフトウェアが、要件定義書通りに機能するかどうか、テストするポイントをまとめたドキュメント。テスト概要、テストシナリオ、担当者、結果確認者、テストスケジュール。
バリデーション・・・入力されたデータが、あるいは記述が、規定された文法に即して、または要求された仕様にそって、適切に記述されているか検証すること。
FW（フレームワーク）・・・枠組み、骨組み、構造など、アプリケーションの土台として機能するソフトウェア。

PHPのFWの種類と特徴
Laravel・・・簡単なアプリケーションを自動生成できる。
Cake PHP・・・素早く快適に開発ができる。
Phalcon・・・C言語の拡張なので非常に高速で動く。
CodeIgniter・・・自由度が他のフレームワークに比べ高い。
FuelPhp・・・シンプルでフレキシブルをテーマにしている小規模案件向け。
Yii・・・アクセス負荷が大きいサービスの使用に適している。

Ajax・・・あるWebページを表示した状態のまま、別ページや再読み込みなどを伴わずにWebサーバ側と通信を行い、動的に表示内容を変更する手法。
API・・・ソフトウェアの機能や管理するデータなどを、外部の他のプログラムから呼び出して利用するための手順やデータ形式などを定めた規約。
LAMP・・・DBを利用したWebアプリケーションを開発・運用するのに適した、オープンソースソフトウェアの組み合わせの一つ。

クラウドサーバー・・・複数の仮想サーバーを個別で利用。
レンタルサーバー・・・一つの物理サーバーを複数ユーザーで共用。
VPS・・・一つの仮想サーバー群を個別で利用。

AWS・・・アマゾンウェブサービスによって提供されているウェブサービス。
プラットフォーム・・・ある機器やソフトウェアを動かすのに必要な基盤となる装置やソフトウェア、サービス、それらの組み合わせのこと。
カバレッジ・・・モノや範囲に対して全体の内どれくらいをカバーしているか表すための指標。
エビデンス・・・最終検証段階においてシステムが発注どおりに動作していることを示す証拠となる書籍やデータなどのこと。
コンパイル・・・高水準プログラミング言語で書かれたコンピュータプログラムを、コンピュータが解釈・実行できる形式に一括して変換するソフトウェア。
バッチ処理・・・あらかじめ一連の手順を登録しておき、まとめて連続的に実行する方式。

デプロイ・・・ソフトウェアを実際の運用環境に配置・展開して実用に使うこと。
ブルーグリーンデプロイメント・・・二つの環境を用意し、本番環境をブルーで動かしたまま、新環境をグリーンにデプロイする。旧環境から新環境へアップデートする。
イミュータブルデプロイメント・・・新環境への切り替え後、旧環境は破棄する。
シンボリックデプロイメント・・・運用中の別のサーバー上に別の新しいファイルを配置して、サービスが利用しているシンボリックリンクを変更することで新しいアプリケーションに切り替える。
ローリングデプロイメント・・・複数のサーバーに対して順番にロードバランサーにから切り離してデプロイから切り離してデプロイを行っていく手法。

データベース接続クライアント・・・データベース管理システムや関係データベース管理システム上のデータを容易に扱うためのソフトウェア。例・TeamSQL
Gitホスティングサービス・・・Gitによるクラウドベースのバージョン管理サービス。例・Githubなど。
チケット管理ツール・・・プロジェクト毎に発生各種タスクを発行して、制作者に対して仕事を依頼するためのもの。例・Redmine
DBのJOOINとは・・・複数テーブルの結合を行いたいときに使う命令。
SEO・・・Web検索サイトの検索結果リストの上位に表示させるために様々な工夫をすること。


